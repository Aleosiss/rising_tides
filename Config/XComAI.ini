[XComGame.X2AIBTBehaviorTree]
+EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=Rend)
+EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=ArcWave)
+EquivalentAbilities=( KeyName=Rend, EquivalentAbilityName[0]=ArcWave)

+EquivalentAbilities=( KeyName=PsiDimensionalRiftStage1, EquivalentAbilityName[0]=RTScholarIonicStorm )

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_RTTemplar, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_RTTemplar, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_RTTemplar, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_RTTemplar, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_RTTemplar, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_RTTemplar, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_RTTemplar, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_RTTemplar)
+Behaviors=(BehaviorName=GenericEvaluateTarget_RTTemplar, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_RTTemplar, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_RTTemplar, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=AvoidBoundAndPanickedTargets)

;usage
+Behaviors=(BehaviorName=TryParry, NodeType=Sequence, Child[0]=IsAbilityReady-ParryActivate, Child[1]=SelectAbility-ParryActivate)
+Behaviors=(BehaviorName=IsAbilityReady-ParryActivate, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-ParryActivate, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-Rend, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Rend, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-Rend, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Rend, NodeType=Action)

+Behaviors=(BehaviorName=TryRend, NodeType=Sequence, Child[0]=IsAbilityAvailable-Rend, Child[1]=RendStepSelector)
+Behaviors=(BehaviorName=RendStepSelector, NodeType=Selector, Child[0]=RendAttack, Child[1]=MoveMeleeIfFirstAbilityFANATIC)
+Behaviors=(BehaviorName=RendAttack, NodeType=Sequence, Child[0]=SelectTargetForRend, Child[1]=SelectAbility-Rend)

; targeting
+Behaviors=(BehaviorName=SelectTargetForRend, NodeType=Sequence, Child[0]=SetTargetStack-Rend, Child[1]=SelectBestTargetForRend, Child[2]=HasValidTarget-Rend)
+Behaviors=(BehaviorName=SelectBestTargetForRend, NodeType=RepeatUntilFail, Child[0]=TargetSelectIterationForRend)
+Behaviors=(BehaviorName=TargetSelectIterationForRend, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=EvaluateTargetForRend, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateTargetForRend, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreInvalidateCivilians, Child[5]=SSTeamSpecificModifiers)

; Peon
+Behaviors=(BehaviorName="RTTemplarPeonRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RTTemplarPeon_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RTTemplarPeon_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RTTemplarPeon_RedAbilitySelector)
+Behaviors=(BehaviorName=RTTemplarPeon_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RTTemplarPeonRedFirstAction, Child[2]=RTTemplarPeonRedLastAction)

+Behaviors=(BehaviorName=RTTemplarPeonRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RTTemplarPeonRedFirstActionSelector)
+Behaviors=(BehaviorName=RTTemplarPeonRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryMoveThenGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RTTemplarPeonRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RTTemplarPeonRedLastActionSelector)
+Behaviors=(BehaviorName=RTTemplarPeonRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)

; Scholar
+Behaviors=(BehaviorName="RTTemplarScholarRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RTTemplarScholar_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RTTemplarScholar_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RTTemplarScholar_RedAbilitySelector)
+Behaviors=(BehaviorName=RTTemplarScholar_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RTTemplarScholarRedFirstAction, Child[2]=RTTemplarScholarRedLastAction)
+Behaviors=(BehaviorName=RTTemplarScholarRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RTTemplarScholarRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.

+Behaviors=(BehaviorName=RTTemplarScholarRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryMoveThenRTScholarIonicStorm, \\
	Child[4]=SelectMove_JobOrDefensive, \\
	Child[5]=TryScholarAbilities, \\
	Child[6]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RTTemplarScholarRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RTTemplarScholarRedLastActionSelector)
+Behaviors=(BehaviorName=RTTemplarScholarRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=TryRTScholarIonicStorm, \\
	Child[3]=TryScholarAbilities, \\
	Child[4]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=SelectMove_JobOrAggressive) 

+Behaviors=(BehaviorName=TryScholarAbilities, NodeType=RandSelector, Child[0]=TryRTScholarVolt, Param[0]=50, Child[1]=TryStunStrike, Param[1]=20, Child[2]=TryAmplify, Param[2]=20, Child[3]=TryRend, Param[3]=10)

; Warrior
+Behaviors=(BehaviorName="RTTemplarWarriorRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RTTemplarWarrior_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RTTemplarWarrior_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RTTemplarWarrior_RedAbilitySelector)
+Behaviors=(BehaviorName=RTTemplarWarrior_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RTTemplarWarriorRedFirstAction, Child[2]=RTTemplarWarriorRedLastAction)
+Behaviors=(BehaviorName=RTTemplarWarriorRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RTTemplarWarriorRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.

+Behaviors=(BehaviorName=RTTemplarWarriorRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryRendOrRTScholarVolt, \\
	Child[4]=SelectMoveProfileByJob, \\
	Child[5]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RTTemplarWarriorRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RTTemplarWarriorRedLastActionSelector)
+Behaviors=(BehaviorName=RTTemplarWarriorRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=TryRend, \\
	Child[3]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrAggressive) 

+Behaviors=(BehaviorName=TryRendOrRTScholarVolt, NodeType=RandSelector, Child[0]=TryRend, Param[0]=75, Child[1]=TryRTScholarVolt, Param[1]=10, Child[2]=TryTemplarInvert, Param[2]=15)

; RTScholarVolt
+Behaviors=(BehaviorName=TryRTScholarVolt, NodeType=Sequence, Child[0]=IsAbilityAvailable-RTScholarVolt, Child[1]=SelectTargetForRTScholarVolt, Child[2]=SelectAbility-RTScholarVolt) 
+Behaviors=(BehaviorName=IsAbilityAvailable-RTScholarVolt, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForRTScholarVolt, NodeType=Sequence, Child[0]=SetTargetStack-RTScholarVolt, Child[1]=IterateTargetsForRTScholarVolt, Child[2]=HasValidTarget-RTScholarVolt)
+Behaviors=(BehaviorName=SetTargetStack-RTScholarVolt, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForRTScholarVolt, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForRTScholarVolt)
+Behaviors=(BehaviorName=IterateNextTargetForRTScholarVolt, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForRTScholarVolt, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForRTScholarVolt, NodeType=Successor, Child[0]=EvaluateForRTScholarVolt)
+Behaviors=(BehaviorName=EvaluateForRTScholarVolt, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-RTScholarVolt, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RTScholarVolt, NodeType=Action)
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)

; Invert
+Behaviors=(BehaviorName=TryTemplarInvert, NodeType=Sequence, Child[0]=IsAbilityAvailable-TemplarInvert, Child[1]=SelectTargetForTemplarInvert, Child[2]=SelectAbility-TemplarInvert) 
+Behaviors=(BehaviorName=IsAbilityAvailable-TemplarInvert, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForTemplarInvert, NodeType=Sequence, Child[0]=SetTargetStack-TemplarInvert, Child[1]=IterateTargetsForTemplarInvert, Child[2]=HasValidTarget-TemplarInvert)
+Behaviors=(BehaviorName=SetTargetStack-TemplarInvert, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForTemplarInvert, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForTemplarInvert)
+Behaviors=(BehaviorName=IterateNextTargetForTemplarInvert, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForTemplarInvert, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForTemplarInvert, NodeType=Successor, Child[0]=EvaluateForTemplarInvert)
+Behaviors=(BehaviorName=EvaluateForTemplarInvert, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-TemplarInvert, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-TemplarInvert, NodeType=Action)
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)

; Amplify
+Behaviors=(BehaviorName=TryAmplify, NodeType=Sequence, Child[0]=IsAbilityAvailable-Amplify, Child[1]=SelectTargetForAmplify, Child[2]=SelectAbility-Amplify) 
+Behaviors=(BehaviorName=IsAbilityAvailable-Amplify, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForAmplify, NodeType=Sequence, Child[0]=SetTargetStack-Amplify, Child[1]=IterateTargetsForAmplify, Child[2]=HasValidTarget-Amplify)
+Behaviors=(BehaviorName=SetTargetStack-Amplify, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForAmplify, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForAmplify)
+Behaviors=(BehaviorName=IterateNextTargetForAmplify, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForAmplify, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForAmplify, NodeType=Successor, Child[0]=EvaluateForAmplify)
+Behaviors=(BehaviorName=EvaluateForAmplify, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-Amplify, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Amplify, NodeType=Action)
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)

; StunStrike
+Behaviors=(BehaviorName=TryStunStrike, NodeType=Sequence, Child[0]=IsAbilityAvailable-StunStrike, Child[1]=SelectTargetForStunStrike, Child[2]=SelectAbility-StunStrike) 
+Behaviors=(BehaviorName=IsAbilityAvailable-StunStrike, NodeType=Condition)
+Behaviors=(BehaviorName=SelectTargetForStunStrike, NodeType=Sequence, Child[0]=SetTargetStack-StunStrike, Child[1]=IterateTargetsForStunStrike, Child[2]=HasValidTarget-StunStrike)
+Behaviors=(BehaviorName=SetTargetStack-StunStrike, NodeType=Action)
+Behaviors=(BehaviorName=IterateTargetsForStunStrike, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForStunStrike)
+Behaviors=(BehaviorName=IterateNextTargetForStunStrike, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForStunStrike, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSEvaluateForStunStrike, NodeType=Successor, Child[0]=EvaluateForStunStrike)
+Behaviors=(BehaviorName=EvaluateForStunStrike, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=TargetIsAttackable, NodeType=Inverter, Child[0]=TargetIsNotAttackable)
+Behaviors=(BehaviorName=HasValidTarget-StunStrike, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-StunStrike, NodeType=Action) 
+Behaviors=(BehaviorName=TargetNotTeamTheLost, NodeType=Inverter, Child[0]=IsTargetTeam-eTeam_TheLost)

; Ionic Storm (Scholar)
+Behaviors=(BehaviorName=TryRTScholarIonicStorm, NodeType=Sequence, Child[0]=IsAbilityAvailable-RTScholarIonicStorm, Child[1]=FindPotentialAoETargets-PsiRiftProfile, Child[2]=SelectAoETarget-PsiRiftProfile, Child[3]=SelectAbility-RTScholarIonicStorm)
+Behaviors=(BehaviorName=TryMoveThenRTScholarIonicStorm, NodeType=Selector, Child[0]=TryMoveForRTScholarIonicStorm, Child[1]=TryRTScholarIonicStorm)
+Behaviors=(BehaviorName=TryMoveForRTScholarIonicStorm, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-RTScholarIonicStorm, Child[2]=FindPotentialAoETargets-PsiRiftProfile, Child[3]=MoveStandardIfFirstAbility-RTScholarIonicStorm)
+Behaviors=(BehaviorName=IsAbilityAvailable-RTScholarIonicStorm, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RTScholarIonicStorm, NodeType=Action)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-RTScholarIonicStorm, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindRTScholarIonicStormDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindRTScholarIonicStormDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-RTScholarIonicStorm, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Defensive)
+Behaviors=(BehaviorName=RestrictToAbilityRange-RTScholarIonicStorm, NodeType=Action)

;+AoEProfiles=( Profile=RTScholarIonicStormProfile, Ability=RTScholarIonicStorm, MinTargets=2, bFailOnFriendlyFire=0, bFailOnObjectiveFire=False)
;+Behaviors=(BehaviorName=FindPotentialAoETargets-RTScholarIonicStormProfile, NodeType=Action)
;+Behaviors=(BehaviorName=SelectAoETarget-RTScholarIonicStormProfile, NodeType=Action)

; Priest
+Behaviors=(BehaviorName="RTTemplarPriestRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=RTTemplarPriest_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=RTTemplarPriest_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=RTTemplarPriest_RedAbilitySelector)
+Behaviors=(BehaviorName=RTTemplarPriest_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=RTTemplarPriestRedFirstAction, Child[2]=RTTemplarPriestRedLastAction)
+Behaviors=(BehaviorName=RTTemplarPriestRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=RTTemplarPriestRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.

+Behaviors=(BehaviorName=RTTemplarPriestRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=TryRTPriestAbilities, \\
	Child[4]=SelectMove_JobOrDefensive, \\
	Child[5]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[6]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=RTTemplarPriestRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=RTTemplarPriestRedLastActionSelector)
+Behaviors=(BehaviorName=RTTemplarPriestRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParry, \\
	Child[1]=TryParry, \\
	Child[2]=TryRTPriestAbilities, \\
	Child[3]=TryShootOrReloadOrOverwatch_RTTemplar, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrAggressive) 

+Behaviors=(BehaviorName=TryRTPriestAbilities, NodeType=RandSelector, Child[0]=SelectPriestAbility, Param[0]=80, Child[1]=TryRend, Param[1]=20)